apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: buildah
spec:
  params:
    - name: IMAGE
      description: Reference of the image buildah will produce.
    - name: IMAGE_TAG
      description: Reference of the target image tag.
      default: latest
    - name: BUILDAH_IMAGE
      description: Reference the image version of buildah.
    - name: STORAGE_DRIVER
      description: Set buildah storage driver
      default: vfs
    - name: DOCKERFILE
      description: Path to the Dockerfile to build.
      default: ./Dockerfile
    - name: CONTEXT
      description: Path to the Dockerfile to build.
      default: .
    - name: IMAGE_REGISTRY_USER
      description: Image registry username.
      default: image-registry-username
    - name: IMAGE_REGISTRY_PASSWORD
      description: Image registry password.
      default: image-registry-password
  workspaces:
    - name: source
    - name: dockerconfig
      description: Includes a docker `.dockerconfigjson`
      optional: true
      mountPath: /root/.docker/
  steps:
    - name: build
      image: $(params.BUILDAH_IMAGE)
      workingDir: $(workspaces.source.path)
      script: |
        buildah login \
          -u $IMAGE_REGISTRY_USER \
          -p $IMAGE_REGISTRY_PASS $(params.IMAGE_REGISTRY)
        buildah --storage-driver=$(params.STORAGE_DRIVER) bud \
          --no-cache \
          --isolation chroot $(params.CONTEXT) \
          -f $(params.DOCKERFILE) \
          -t $(params.IMAGE):$(params.IMAGE_TAG)
        buildah --storage-driver=$(params.STORAGE_DRIVER) push $(params.IMAGE):$(params.IMAGE_TAG)
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
      env:
        - name: IMAGE_REGISTRY_USER
          valueFrom:
            secretKeyRef:
              name: $(params.IMAGE_REGISTRY_USER)
              key: $(params.IMAGE_REGISTRY_USER)
        - name: IMAGE_REGISTRY_PASS
          valueFrom:
            secretKeyRef:
              name: $(params.IMAGE_REGISTRY_PASS)
              key: $(params.IMAGE_REGISTRY_PASS)
    - name: trivy-scan
      image: docker.io/aquasec/trivy
      workingDir: $(workspaces.source.path)
      script: |
        trivy image $(params.IMAGE):$(params.IMAGE_TAG)
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
      env:
        - name: TRIVY_USERNAME
          valueFrom:
            secretKeyRef:
              name: image-registry-username
              key: image-registry-username
        - name: TRIVY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: image-registry-password
              key: image-registry-password
    - name: push
      image: $(params.BUILDAH_IMAGE)
      workingDir: $(workspaces.source.path)
      script: |
        buildah login \
          -u $IMAGE_REGISTRY_USER \
          -p $IMAGE_REGISTRY_PASS $(params.IMAGE_REGISTRY)
        buildah --storage-driver=$(params.STORAGE_DRIVER) tag $(params.IMAGE):$(params.IMAGE_TAG) $(params.IMAGE):latest
        buildah --storage-driver=$(params.STORAGE_DRIVER) push \
          --authfile /root/.docker/.dockerconfigjson $(params.IMAGE):latest
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
      env:
        - name: IMAGE_REGISTRY_USER
          valueFrom:
            secretKeyRef:
              name: $(params.IMAGE_REGISTRY_USER)
              key: $(params.IMAGE_REGISTRY_USER)
        - name: IMAGE_REGISTRY_PASS
          valueFrom:
            secretKeyRef:
              name: $(params.IMAGE_REGISTRY_PASS)
              key: $(params.IMAGE_REGISTRY_PASS)
  volumes:
    - name: varlibcontainers
      emptyDir: {}
