name: testing

on:
  workflow_dispatch:
  schedule:
    - cron:  '0 0 * * 0'

env:
  ## GITHUB ENVIRONMENT
  DEPLOY: 'true'

  ## DOCKER
  NAME: flask-web
  IMAGE: gregnrobinson/flask-demo-app
  BUILD_WORKDIR: ./demo/flask-web

  ## TRIVY
  TRIVY_EXIT_CODE: 1
  TRIVY_SEVERITY: CRITICAL
  TRIVY_IGNORE_UNFIXED: true

  ## HELM
  HELM_DIR: ./demo/flask-web/helm
  HELM_VALUES_FILE: ./demo/flask-web/helm/values.yaml

  ## SONAR
  SONAR_ORG: ci-testing
  SONAR_PROJECT_KEY: github-actions-test
  SONAR_URL: https://sonarcloud.io

  ## SONAR MVN
  SONAR_MVN_WORKDIR: ./demo/maven-test

  ## OWASP ZAP
  ZAP_SCAN_TYPE: 'base' # Accepted values are base and full.
  ZAP_TARGET_URL: http://www.itsecgames.com
  ZAP_DURATION: '2'
  ZAP_MAX_DURATION: '5'

  # PUBLISH PRE SIGNED HTML WEBPAGE
  # Set to false if you don't want to publish to GCS.
  ZAP_GCP_PUBLISH: 'true'
  ZAP_GCP_PROJECT: phronesis-310405
  ZAP_GCP_BUCKET: 'zap-scan-results'

  ## OPENSHIFT ENVIRONMENT
  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  OPENSHIFT_NAMESPACE: "default"

  ## APP SETTINGS
  APP_NAME: "flask-demo-app"
  APP_PORT: "80"

  # üñäÔ∏è EDIT to change the image registry settings.
  # Registries such as GHCR, Quay.io, and Docker Hub are supported.
  IMAGE_REGISTRY: ${{ secrets.IMAGE_REGISTRY }}
  IMAGE_REGISTRY_USER: ${{ secrets.IMAGE_REGISTRY_USER }}
  IMAGE_REGISTRY_PASSWORD: ${{ secrets.IMAGE_REGISTRY_PASSWORD }}
jobs:
  codeql-scan:
    uses: bcgov/pipeline-templates/.github/workflows/codeql.yaml@main
  build-push:
    uses: bcgov/pipeline-templates/.github/workflows/build-push.yaml@main
    with:
      NAME: nginx-web
      IMAGE: gregnrobinson/bcgov-nginx-demo
      WORKDIR: ./demo/nginx
    secrets:
      IMAGE_REGISTRY_USER: ${{ secrets.IMAGE_REGISTRY_USER }}
      IMAGE_REGISTRY_PASSWORD: ${{ secrets.IMAGE_REGISTRY_PASSWORD }}
  trivy-scan:
    uses: bcgov/pipeline-templates/.github/workflows/trivy-container.yaml@main
    with:
      IMAGE: gregnrobinson/bcgov-nginx-demo
      TAG: latest
  sonar-repo-scan:
    uses: bcgov/pipeline-templates/.github/workflows/sonar-scanner.yaml@main
    with:
      ORG: ci-testing
      PROJECT_KEY: bcgov-pipeline-templates
      URL: https://sonarcloud.io
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  sonar-scan-mvn:
    uses: bcgov/pipeline-templates/.github/workflows/sonar-scanner-mvn.yaml@main
    with:
      WORKDIR: ./tekton/demo/maven-test
      PROJECT_KEY: pipeline-templates
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  zap-owasp:
    uses: bcgov/pipeline-templates/.github/workflows/owasp-scan.yaml@main
    with:
      ZAP_SCAN_TYPE: 'base' # Accepted values are base and full.
      ZAP_TARGET_URL: http://www.itsecgames.com
      ZAP_DURATION: '2'
      ZAP_MAX_DURATION: '5'
      ZAP_GCP_PUBLISH: true
      ZAP_GCP_PROJECT: phronesis-310405  # Only required if ZAP_GCP_PUBLISH is TRUE
      ZAP_GCP_BUCKET: 'zap-scan-results' # Only required if ZAP_GCP_PUBLISH is TRUE
    secrets:
      GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }} # Only required if ZAP_GCP_PUBLISH is TRUE
  helm-build-deploy:
    uses: bcgov/pipeline-templates/.github/workflows/helm-build-deploy.yaml@main
    with:
      ## DOCKER BUILD PARAMS
      NAME: flask-web
      BUILD_WORKDIR: ./demo/flask-web
      
      IMAGE: gregnrobinson/flask-demo-app
      IMAGE_REGISTRY: docker.io

      ## HELM VARIABLES
      HELM_DIR: ./demo/flask-web/helm
      VALUES_FILE: ./demo/flask-web/helm/values.yaml

      # EDIT your repository secrets to log into your OpenShift cluster and set up the context.
      # See https://github.com/redhat-actions/oc-login#readme for how to retrieve these values.
      # To get a permanent token, refer to https://github.com/redhat-actions/oc-login/wiki/Using-a-Service-Account-for-GitHub-Actions
      OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
      OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
      OPENSHIFT_NAMESPACE: "default"

      # EDIT with the port your application should be accessible on.
      # If the container image exposes *exactly one* port, this can be left blank.
      # Refer to the 'port' input of https://github.com/redhat-actions/oc-new-app
      APP_PORT: "80"

      # EDIT to change the image registry settings.
      # Registries such as GHCR, Quay.io, and Docker Hub are supported.


      # Used to access Redhat Openshift on an internal IP address from a Github Runner.
      TAILSCALE: true
    secrets:
      IMAGE_REGISTRY_USER: ${{ secrets.IMAGE_REGISTRY_USER }}
      IMAGE_REGISTRY_PASSWORD: ${{ secrets.IMAGE_REGISTRY_PASSWORD }}
      OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
      OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
      TAILSCALE_API_KEY: ${{ secrets.TAILSCALE_API_KEY }} # Only required if TAILSCALE is TRUE
  slack-workflow-status:
    if: always()
    name: Post Workflow Status To Slack
    needs:
      - codeql-scan
      - build-push
      - trivy-scan
      - sonar-repo-scan
      - sonar-scan-mvn
      - zap-owasp
      - helm-build-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Slack Workflow Notification
        uses: Gamesight/slack-workflow-status@master
        with:
          # Required Input
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.SLACK_WEBHOOK_URL}}
          name: 'Github Workflows'
          icon_emoji: ':fire:'
          icon_url: 'https://img.icons8.com/material-outlined/96/000000/github.png'
